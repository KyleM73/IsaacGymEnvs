# used to create the object
name: Bumpybot

physics_engine: ${..physics_engine}

videoDir: ''
# if given, will override the device setting in gym.
env: 
  numEnvs: ${resolve_default:200,${...num_envs}}
  envSpacing: 3
  episodeLength: 500
  controlFrequencyInv: 10 #5 #Hz
  enableDebugVis: False

  #clipActions: 1.0

  velocityMax: 1.0
  velocityGoal : 1.0
  angVelocityGoal: 0
  goalRadius: 0.2

  # cost parameters
  rewardScale: 1
  actionsCost: 1
  poseCost: 1
  angCost: 1
  velocityCost: 1
  angularVelocityCost: 1
  contactCost: 1
  contactLimit: 130 #[N], ~15 lbs
  contactThreshold: 65 #N
  deathCost: -1000
  goalBonus: 200

  # control parameters
  forceScale: 20 # F = ma => goal: 1 N force = 1 m/s/s acceleration
  torqueScale: 1.28 # 1/0.78 T = Ia => goal: 1 Nm torque = 1 rad/s/s angular acceleration
  # for a cylinder, I = 0.5*m*r^2 = 0.78 => m=20 kg r=0.2794 m 

  asset:
    assetFileName: "urdf/bumpybot.urdf"
    occupancyFileName: "occupancy/hall.png"
    humanFileName: "urdf/human/human.urdf"
    #humanFileName: "urdf/block.urdf"
    numHumans: 5
    numSamples: 512
    testIdx: 0 #42
    setLoc: False
    start_offset: 0
    end_offset: 0
    #occupancyFileName: "occupancy/easy_maze.png"
    #reflect: True

  path:
    start: [0,0]
    target: [0,6]
    filterDist: 0.45
    showPath: False

  plane:
    staticFriction: 0.0
    dynamicFriction: 0.0
    restitution: 0.0

  # set to True if you use camera sensors in the environment
  enableCameraSensors: True

image:
  height: 128
  width: 128
  depth: 1
  fstack: 5
  range: 2.5
  minRange: 0.25
  updateFreq: 10 #Hz
  fixCamera: False
  FOV: 120

viewer:
  height: 1080
  width: 1920
  pos: [-2.0, 4.0, 6.0]
  target: [0.0, 4.0, 0.0]
  captureVideo: True
  captureOnce: True
  captureVideoFreq: 10
  fancyTest:
    fancyUrdf: "urdf/bumpybot_fancy.urdf"
    test: False
    cam_0:
      height: 1440
      width: 1440
    cams:
      cam_1:
        height: 1440
        width: 2560
        pos: [-2.0, 4.0, 6.0]
        target: [0.0, 4.0, 0.0]
      cam_2:
        height: 1440
        width: 2560
        pos: [2.0, 4.0, 6.0]
        target: [0.0, 4.0, 0.0]
      cam_3:
        height: 2560
        width: 1440
        pos: [0.0, 4.0, 4.0]
        target: [0.0, 4.1, 0]
      cam_4:
        height: 1440
        width: 1440
        pos: [0.0, 0.0, 2.0]
        target: [0.0, 4.0, 0.0]
      cam_5:
        height: 1440
        width: 1440
        pos: [0.0, 10.0, 2.0]
        target: [0.0, 4.0, 0.0]

sim:
  test: ${...test}
  dt: 0.01 # 1/100 s
  substeps: 4
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 4
    num_velocity_iterations: 1 #0
    contact_offset: 0.02
    rest_offset: 0.01 #0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 100.0 #2
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 8388608 # 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 1 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (default - all contacts)
